version: "3"

services:
  # App php-fpm service
  app:
    build:
      context: ./docker/php
      args:
        APP_ENV: ${APP_ENV}
        PHP_VERSION: ${PHP_VERSION}
        REMOTE_WORKING_DIR: ${REMOTE_WORKING_DIR}
        DB_DATABASE: ${DB_DATABASE}
        DB_USERNAME: ${DB_USERNAME}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_PASSWORD_ROOT: ${DB_PASSWORD_ROOT}
        PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}
    container_name: app
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}
      - ./docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    env_file: .env
    ports:
      - 9001:9001
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      #- ./docker/nginx/ssl/:/etc/nginx/ssl/
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    networks:
      - app-network

  database:
    image: mysql:5.7
    container_name: database
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_ROOT}
    ports:
      - 3306:3306
    volumes:
      - database-volume:/var/lib/mysql
    depends_on:
      - app
    networks:
      - app-network

# Docker Volumes
volumes:
  database-volume:

# Docker Networks
networks:
  app-network:
    driver: bridge
